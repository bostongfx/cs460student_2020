# -*- coding: utf-8 -*-
"""triangle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jVaxg0LPN1AQWz-JBdmAGRBAPs6n0rMr
"""

import numpy as np
import base64
import scipy

!pip install pywavefront

#HINTS FROM -https://github.com/pywavefront/PyWavefront/issues/87

import pywavefront

scene = pywavefront.Wavefront(
    "triangle.obj",
    create_materials=True,
    collect_faces=True,
)

VERTICES=np.array(scene.mesh_list[0].materials[0].vertices , dtype=np.float32)
INDICES=np.array(scene.mesh_list[0].faces, dtype=np.ushort)

Vertices_len= len(VERTICES)/3
Indices_len= len(INDICES)*3

split_vertices = np.split(VERTICES,3)

Z=split_vertices[0]
Y=split_vertices[1]
X=split_vertices[2]

HOWMANY_V = Vertices_len
HOWMANY_I = Indices_len
MAX_X = int(np.max(X))
MAX_Y = int(np.max(Y))
MAX_Z = int(np.max(Z))
MIN_X = int(np.min(X))
MIN_Y = int(np.min(Y))
MIN_Z = int(np.min(Z))
MAX = np.max(INDICES)
MIN = np.min(INDICES)

HOWMANYBYTES_V = VERTICES.nbytes
HOWMANYBYTES_I = INDICES.nbytes

B64_VERTICES = base64.b64encode(VERTICES)
B64_INDICES = base64.b64encode(INDICES)

B64_INDICES

gltf = {
    "asset": {
        "version": "2.0",
        "generator": "CS460 Magic Fingers"
    },

  "accessors": [
        {
            "bufferView": 0,
            "byteOffset": 0,
            "componentType": 5126,
            "count": HOWMANY_V,
            "type": "VEC3",
            "max": [MAX_X, MAX_Y, MAX_Z],
            "min": [MIN_X, MIN_Y, MIN_Z]
        },
        {
            "bufferView": 1,
            "byteOffset": 0,
            "componentType": 5123,
            "count": HOWMANY_I,
            "type": "SCALAR",
            "max": [MAX],
            "min": [MIN]
        }
    ], 

    "bufferViews": [
        {
            "buffer": 0,
            "byteOffset": 0,
            "byteLength": HOWMANYBYTES_V,
            "target": 34962
        },
        {
            "buffer": 1,
            "byteOffset": 0,
            "byteLength": HOWMANYBYTES_I,
            "target": 34963
        }
    ],
    
    "buffers": [
        {
            "uri": "data:application/octet-stream;base64," + str(B64_VERTICES, 'utf-8'),
            "byteLength": HOWMANYBYTES_V
        },
        {
            "uri": "data:application/octet-stream;base64," + str(B64_INDICES, 'utf-8'),
            "byteLength": HOWMANYBYTES_I
        }
    ],
  
    "meshes": [
        {
            "primitives": [{
                 "mode": 4,
                 "attributes": {
                     "POSITION": 0
                 },
                 "indices": 1
            }]
        }
    ],

    "nodes": [
        {
            "mesh": 0
        }
    ],

    "scenes": [
        {
            "nodes": [
                0
            ]
        }
    ],

    "scene": 0
}

gltf

str(gltf).replace("'", '"') # we need double quotes instead of single quotes

